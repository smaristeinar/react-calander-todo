{"version":3,"sources":["components/Button.js","components/Headder.js","components/Task.js","components/Tasks.js","components/Addtask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Headder","onAdd","showAddTask","onPrint","Task","task","onDelete","onReminde","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","date","seeAll","map","Addtask","useState","setText","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","Date","setShowAddTask","showAllTask","setShowAllTasks","localStorage","getItem","JSON","parse","setTasks","useEffect","setItem","stringify","formatValue","deleteTask","filter","console","log","moment","format","onClickDay","tileContent","find","item","length","newTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffe243a8.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (<button\r\n    onClick={onClick}\r\n    style={{ backgroundColor: color }} \r\n    className=\"btn\">{text}</button>\r\n)\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: \"steelblue\",\r\n    text: \"button\"\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    \r\n}\r\n\r\nexport default Button\r\n","import Button from \"./Button\"\r\n\r\n\r\n\r\nconst Headder = ({onAdd, showAddTask, onPrint}) => {\r\n\r\n    return (\r\n        <header className= \"header\">\r\n           <h1>Task Tracker</h1> \r\n           <Button  onClick={onAdd} color={showAddTask?\"red\":\"green\"} text={showAddTask?\"Close\":\"Add\"} />\r\n           <Button onClick={onPrint} color={\"blue\"} text={\"Show all\"}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Headder\r\n","import { reduce } from \"async\"\r\nimport {FaTimes} from \"react-icons/fa\"\r\n\r\nconst Task = ({task, onDelete, onReminde}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? \"reminder\":\"\"}`} onDoubleClick={()=> onReminde(task.id)}>\r\n            <h3>{task.text}\r\n            <FaTimes\r\n            style={{color:\"red\", cursor:\"pointer\"}} onClick={()=> onDelete(task.id)}/>\r\n            </h3>\r\n            <p>date: {task.day}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Task","import Task from \"./Task\";\r\n\r\nconst Tasks = ({tasks, onDelete, onReminde,date, seeAll}) => {\r\n return (\r\n      <>\r\n       {tasks.map((task)=>(\r\n          <Task key={task.id} task={task}\r\n            onDelete={onDelete}\r\n            onReminde={onReminde}\r\n          />))}  \r\n      </>\r\n    )\r\n\r\n}\r\n\r\nexport default Tasks\r\n /*\r\n    return (\r\n        <>\r\n          {tasks.map((task)=>(\r\n            <Task key={task.id} task={task}\r\n              onDelete={onDelete}\r\n              onReminde={onReminde}\r\n            />))}  \r\n        </>\r\n    )\r\n}\r\n  */","import { useState } from \"react\"\r\n\r\n\r\nconst Addtask = ({onAdd, date}) => {\r\n    const [text, setText] = useState(\"\");\r\n    //const [day, setDay] = useState(\"\");\r\n    const [reminder, setReminder] = useState(false);\r\n    \r\n    const onSubmit=(e) =>{\r\n        e.preventDefault()\r\n        if(!text){\r\n            alert(\"Pleas add a task\");\r\n            return\r\n        }\r\n\r\n        onAdd({ text, reminder });\r\n        setText(\"\");\r\n       // setDay(\"\");\r\n        setReminder(false);\r\n        \r\n    }\r\n\r\n    return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n        <div className =\"form-control\">\r\n            <label>Task</label>\r\n            <input type=\"text\" placeholder=\"Add Task\" value={text} onChange={(e) => setText(e.target.value)}/>\r\n        </div>\r\n        <div className =\"form-controle\">\r\n            <p>{`Selected Date: ${date}`}</p>\r\n        </div>\r\n        <div className =\"form-control form-control-check\">\r\n            <label>Set Reminder</label>\r\n            <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n        </div>\r\n        <input className=\"btn btn-block\" type=\"submit\" value=\"Save Task\"/>\r\n\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default Addtask\r\n","import Headder from \"./components/Headder\";\nimport Tasks from \"./components/Tasks\";\nimport { useState,useEffect } from \"react\"\nimport Task from \"./components/Task\";\nimport Addtask from \"./components/Addtask\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport moment from 'moment';\n\nfunction App() {\n\n  const [value, onChange] = useState(new Date());\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [showAllTask, setShowAllTasks] = useState(true);\n  let [tasks, setTasks] = useState(()=>{return localStorage.getItem(\"todos\")? JSON.parse(localStorage.getItem(\"todos\")): [] })\n\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\",JSON.stringify(tasks))\n  }, [tasks])\n  const formatValue = \"MMM Do YYYY\"\n\n\n\n\n  // add Task\n  const addTask = (task)=>{\n    console.log(task);\n    let id = tasks.length + 1;\n    let date = moment(value).format(formatValue);\n    const newTask = {id, day:date, ...task};\n    setTasks([...tasks, newTask]);\n    localStorage.setItem(\"todos\",JSON.stringify(tasks));\n  }\n\n  //Delete Task\n  const deleteTask = (id) =>{\n    setTasks(tasks.filter((task) => task.id !== id));\n    \n  }\n\n\n  const logValue = () =>{\n    setShowAllTasks(true)\n    console.log(moment(value).format(\"MMM Do YYYY\"));\n\n  }\n\n  const change = () => {\n    setShowAllTasks(false)\n  }\n  \n\n  const changeDate = (e) => {\n    onChange(e)\n  }\n\n\n  const setReminder = (id) =>{\n      setTasks(tasks.map((task)=> task.id === id ? {...task, reminder:!task.reminder}:task))\n      localStorage.setItem(\"todos\",JSON.stringify(tasks));\n  }\n\n\n  return (\n    <div className=\"container\">\n      <Headder onPrint={()=>logValue()} onAdd={() => setShowAddTask(!showAddTask)} showAddTask={showAddTask }/>\n      <Calendar  className=\"container calander\" onChange={changeDate} value={value} onClickDay={change} tileContent={({ date }) => {\n          if (tasks != null) {\n            if (\n              tasks.find(\n                ({ day }) => day === moment(date).format(formatValue)\n              )\n            ) {\n              return (\n              <div className=\"calanderToDoMarker2\">\n                <p className=\"calanderToDoMarker\">\n                  {tasks.filter(item => item.day === moment(date).format(formatValue)).length}\n                </p></div>\n              );\n            }\n          }\n        }}\n        \n      />\n\n     { showAddTask && <Addtask date={moment(value).format(formatValue)} onAdd={addTask} /> }\n\n      {showAllTask && tasks.length > 0 ?(<Tasks tasks={tasks} onDelete={deleteTask} onReminde={setReminder} />\n\n      ):!showAllTask ?(<Tasks tasks={tasks.filter(item => item.day === moment(value).format(formatValue))} onDelete={deleteTask} onReminde={setReminder} />):\"no tasks to show\"} \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}